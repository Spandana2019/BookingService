{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/booking/create-booking.component.ts","./src/app/booking/create-booking.component.html","./src/app/booking/list-booking.component.ts","./src/app/booking/list-booking.component.html","./src/app/notfound.component.ts","./src/app/notfound.component.html","./src/app/services/booking.service.ts","./src/app/signin.component.ts","./src/app/signin.component.html","./src/app/signup.component.ts","./src/app/signup.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACiB;AACI;AACvB;AACA;AACI;;;AAEzD,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,MAAM,EAAE,SAAS,EAAC,oFAAoB,EAAC;IAC7C,EAAC,IAAI,EAAC,UAAU,EAAE,SAAS,EAAC,wFAAsB,EAAC;IACnD,EAAC,IAAI,EAAC,QAAQ,EAAE,SAAS,EAAC,wFAAsB,EAAC;IACjD,EAAC,IAAI,EAAC,QAAQ,EAAE,SAAS,EAAC,iEAAe,EAAC;IAC1C,EAAC,IAAI,EAAC,QAAQ,EAAE,SAAS,EAAC,iEAAe,EAAC;IAC1C,EAAC,IAAI,EAAC,EAAE,EAAE,UAAU,EAAC,SAAS,EAAE,SAAS,EAAC,MAAM,EAAC;IACjD,EAAC,IAAI,EAAC,IAAI,EAAE,SAAS,EAAC,qEAAiB,EAAC;CACzC,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACrBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;;ICsBxC,0EACE;IAAA,qGACF;IAAA,4DAAM;;ADhBD,MAAM,YAAY;IACvB,YAAoB,cAA6B;QAA7B,mBAAc,GAAd,cAAc,CAAe;QACjD,UAAK,GAAG,eAAe,CAAC;QACxB,cAAS,GAAW,KAAK,CAAC;IAFyB,CAAC;IAGpD,eAAe;QACb,OAAO,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;IAC/C,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,SAAS,CACpC,QAAQ,GAAE;YACR,IAAI,QAAQ,EAAC;gBACX,YAAY,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;gBACzC,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;aACrC;iBAAI;gBACH,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;gBACvC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;QACH,CAAC,EACD,KAAK,GAAE;YACL,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;YAC9C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,CACF;IACH,CAAC;;wEAvBU,YAAY;4FAAZ,YAAY;QCRzB,yEACE;QAAA,yEACE;QAAA,wEACE;QAAA,uEAAyC;QAAA,iEAAM;QAAA,4DAAI;QACrD,4DAAK;QACL,wEACE;QAAA,uEAAyC;QAAA,iEAAM;QAAA,4DAAI;QACrD,4DAAK;QACL,wEACE;QAAA,uEAAyC;QAAA,gEAAI;QAAA,4DAAI;QACnD,4DAAK;QACL,yEACE;QAAA,wEAAuC;QAAA,gEAAI;QAAA,4DAAI;QACjD,4DAAK;QACL,yEACE;QAAA,wEAAyC;QAAA,kEAAM;QAAA,4DAAI;QACrD,4DAAK;QACL,yEACE;QAAA,wEAA4D;QAAnB,gIAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAI;QACxE,4DAAK;QACP,4DAAM;QACN,4EAA+B;QAC/B,0GACE;QAEJ,4DAAM;;QAvBmB,0DAA4B;QAA5B,yFAA4B;QAG5B,0DAA4B;QAA5B,yFAA4B;QAG5B,0DAA6B;QAA7B,0FAA6B;QAS7B,0DAA6B;QAA7B,0FAA6B;QAKpB,0DAAmB;QAAnB,+EAAmB;;6FDdxC,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AAC6B;AACJ;AACnB;AACA;AACI;AACJ;AACG;;AAsBjD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAPJ;YACP,uEAAa;YACb,oEAAgB;YAChB,kEAAmB;YACnB,sEAAgB;SAEjB;mIAIU,SAAS,mBAjBlB,2DAAY;QACZ,wFAAsB;QACtB,oFAAoB;QACpB,iEAAe;QACf,iEAAe;QACf,qEAAiB,aAGjB,uEAAa;QACb,oEAAgB;QAChB,kEAAmB;QACnB,sEAAgB;6FAMP,SAAS;cAnBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,wFAAsB;oBACtB,oFAAoB;oBACpB,iEAAe;oBACf,iEAAe;oBACf,qEAAiB;iBAClB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,kEAAmB;oBACnB,sEAAgB;iBAEjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEgE;AAGrE;;;;;;;ICKzB,4EACwF;IAAA,2EAAgB;IAAA,4DAAQ;;;IAM5G,4EAC0F;IAAA,4EAAiB;IAAA,4DAAQ;;;IACnH,4EACgG;IAAA,wFAA6B;IAAA,4DAAQ;;;IAOrI,4EAC0D;IAAA,wFAA6B;IAAA,4DAAQ;;;IAJ/F,0EACA;IAAA,uEAEA;IAAA,oIAC0D;IAC1D,4DAAM;;;;IAHF,0DAAqB;IAArB,kFAAqB;IAErB,0DAAqD;IAArD,0JAAqD;;;IAazD,4EACwE;IAAA,+EACzD;IAAA,4DAAQ;;;IAKvB,4EACsF;IAAA,sFAA2B;IAAA,4DAAQ;;;IACzH,4EACwE;IAAA,kGAAuC;IAAA,4DAAQ;;;IAO3H,4EAA0E;IAAA,0GAA+C;IAAA,4DAAQ;;;IA2B7H,6EAAgE;IAAA,uDAA6D;IAAA,4DAAS;;;IAA3F,iFAAoB;IAAC,0DAA6D;IAA7D,mJAA6D;;;IAEjI,4EAAiF;IAAA,mFAAwB;IAAA,4DAAQ;;;IAOrH,0EAAkD;IAAA,mGAAwC;IAAA,4DAAM;;;;IAzFxG,sEACI;IAAA,yEACI;IAAA,yEACI;IAAA,2EAAmC;IAAA,+DAAI;IAAA,4DAAQ;IAC/C,sEACA;IAAA,6HACwF;IAC5F,4DAAM;IACF,yEACI;IAAA,4EAAoC;IAAA,gEAAK;IAAA,4DAAQ;IACjD,wEAEA;IAAA,+HAC0F;IAC1F,+HACgG;IACpG,4DAAM;IACN,2EACI;IAAA,8EAA8E;IAAhC,wUAA+B;IAAC,qEAAS;IAAA,4DAAS;IAChG,2HACA;IAKJ,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,wEACA;IAAA,6EAAwD;IAAA,mFAAuB;IAAA,4DAAQ;IAC3F,4DAAM;IACV,4DAAM;IACV,2EACI;IAAA,2EACI;IAAA,6EAA0B;IAAA,oEAAQ;IAAA,4DAAQ;IAC1C,wEACA;IAAA,+HACwE;IAE5E,4DAAM;IACN,2EACI;IAAA,6EAAyB;IAAA,4EAAgB;IAAA,4DAAQ;IACjD,wEACA;IAAA,+HACsF;IACtF,+HACwE;IAC5E,4DAAM;IACV,4DAAM;IAEN,0EACI;IAAA,6EAAoC;IAAA,iEAAK;IAAA,4DAAQ;IACjD,wEACA;IAAA,+HAA0E;IAC9E,4DAAM;IAEN,0EACI;IAAA,6EAAyC;IAAA,yEAAa;IAAA,4DAAQ;IAC9D,wEACJ;IAAA,4DAAM;IAEN,0EACI;IAAA,6EAAwB;IAAA,kEAAM;IAAA,4DAAQ;IACtC,2EACI;IAAA,2EACI;IAAA,wEACA;IAAA,6EAA2C;IAAA,gEAAI;IAAA,4DAAQ;IAC3D,4DAAM;IACN,2EACI;IAAA,wEAEA;IAAA,6EAA6C;IAAA,kEAAM;IAAA,4DAAQ;IAC/D,4DAAM;IACV,4DAAM;IACV,4DAAM;IAEN,2EACI;IAAA,6EAAsB;IAAA,8EAAkB;IAAA,4DAAQ;IAChD,8EACI;IAAA,8EAAiB;IAAA,oFAAwB;IAAA,4DAAS;IAClD,iIAAgE;IACpE,4DAAS;IACT,+HAAiF;IACrF,4DAAM;IACV,4DAAM;IAGN,2EACI;IAAA,8EAAgG;IAAlD,yTAAgB;IAAkC,gEAAI;IAAA,4DAAS;IAC7G,0HAAkD;IACtD,4DAAM;IACV,4DAAM;;;IArFM,0DAAuF;IAAvF,yNAAuF;IAO/E,0DAAqF;IAArF,sNAAqF;IAErF,0DAA2F;IAA3F,4NAA2F;IAIxD,0DAA+D;IAA/D,sGAA+D;IAkBlG,2DAAmE;IAAnE,2LAAmE;IAOnE,0DAAiF;IAAjF,gNAAiF;IAEjF,0DAAmE;IAAnE,qMAAmE;IAOhD,0DAA8C;IAA9C,4JAA8C;IAKsB,0DAAqB;IAArB,8FAAqB;IAsBxG,2DAAkC;IAAlC,qFAAkC;IAEnB,0DAAqD;IAArD,sKAAqD;IAMrB,0DAAgC;IAAhC,gGAAgC;IAC/D,0DAAiB;IAAjB,kFAAiB;;;IAGzD,0EACI;IAAA,8FACJ;IAAA,4DAAM;;ADrFP,MAAM,sBAAsB;IASjC,YAAoB,cAA8B,EAAU,WAAwB,EAAU,MAAc,EAAU,eAA+B;QAAjI,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAgB;QANrJ,cAAS,GAAY,KAAK,CAAC;QAI3B,eAAU,GAAY,KAAK,CAAC;QAI1B,IAAI,CAAC,WAAW,GAAG,kEAAU,CAAC,IAAI,IAAI,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;QAC/D,6BAA6B;QAC7B,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC;IAEhC,CAAC;IAED,QAAQ;QAEN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACpC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBACnC,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;aAC3C,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC;YACtC,iBAAiB,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;YAC7C,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrC,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;SAChE,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,SAAS,CACzD,YAAY,CAAC,EAAE;YACb,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAC1C,IAAI,YAAY,EAAE;gBAChB,KAAK,CAAC,aAAa,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBAClE,KAAK,CAAC,sBAAsB,EAAE,CAAC;aAChC;iBAAM;gBACL,KAAK,CAAC,eAAe,EAAE,CAAC;gBACxB,KAAK,CAAC,sBAAsB,EAAE,CAAC;gBAC/B,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC3C,KAAK,CAAC,sBAAsB,EAAE,CAAC;aAChC;QAEH,CAAC,CACF,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAC9C,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,EAC1C,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAC5B;QAED,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CACrC,KAAK,CAAC,EAAE;YACN,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC;YACxB,IAAI,EAAE,EAAE;gBACN,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,SAAS,CAC3C,QAAQ,CAAC,EAAE;oBACT,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,QAAQ,CAAC;oBACzC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;oBAC7B,IAAI,CAAC,KAAK,GAAG,cAAc;oBAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACzB,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAC5B;aACF;iBAAM;gBACL,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC;gBAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aACzB;QACH,CAAC,CACF;IACH,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC;IACzC,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC;IAC5C,CAAC;IAED,aAAa,CAAC,OAAgB;QAE5B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,IAAI,SAAS,GAAW,OAAO,CAAC,WAAW,CAAC;QAC5C,IAAI,QAAQ,GAAW,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAC3E,IAAI,cAAc,GAAW,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC/E,IAAI,CAAC,gBAAgB,GAAG,QAAQ,GAAG,GAAG,GAAG,cAAc,CAAC;QACxD,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAEpD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAGlC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;YAC1B,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,WAAW,EAAE,OAAO,CAAC,WAAW;YAChC,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,WAAW,EAAE,kEAAU,CAAC,IAAI,CAAC,gBAAgB,EAAE,YAAY,EAAE,OAAO,CAAC;YACrE,YAAY,EAAE,OAAO,CAAC,YAAY;YAClC,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,QAAQ,EAAE,OAAO,CAAC,IAAI;YACtB,aAAa,EAAE;gBACb,QAAQ,EAAE,KAAK;gBACf,eAAe,EAAE,KAAK;aACvB;SACF,CAAC,CAAC;QAEH,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,IAAI,CAAC,WAAW,CAAC;QACxD,gCAAgC;QAChC,wCAAwC;QACxC,KAAK;IACP,CAAC;IAED,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC;IAC9D,CAAC;IACD,IAAI,sBAAsB;QACxB,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IACtE,CAAC;IACD,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,mBAAmB,CAAc;IAC/D,CAAC;IAED,mBAAmB;QACjB,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CACzD,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAC5B,CAAC;IACJ,CAAC;IACD,SAAS;QACP,OAAQ,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAe,CAAC,QAAQ;IAC/D,CAAC;IAED,IAAI;QACF,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC;QAC5C,IAAI,IAAyB,CAAC;QAC9B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;SAC9D;aAAM;YACL,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;SAC1D;QAGD,IAAI,CAAC,SAAS,CACZ,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACnB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACvC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAExB,CAAC,CACF;IAEH,CAAC;IAID,eAAe;QACb,OAAO,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;IAC/C,CAAC;IAED,cAAc,CAAC,KAAsB;QACnC,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACvC,MAAM,eAAe,GAAG,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QACrD,IAAI,QAAQ,CAAC,KAAK,KAAK,eAAe,CAAC,KAAK,IAAI,CAAC,eAAe,CAAC,QAAQ,IAAI,eAAe,CAAC,KAAK,KAAK,EAAE,CAAC,EAAE;YAC1G,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC;SACrC;IACH,CAAC;IAED,UAAU;QACR,IAAI,OAAgB,CAAC;QACrB,OAAO,GAAG;YACR,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK;YACxC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK;YAC1C,KAAK,EAAE,cAAc;YACrB,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YAC5C,WAAW,EAAE,kEAAU,CAAC,IAAI,IAAI,EAAE,YAAY,EAAE,OAAO,CAAC;YACxD,WAAW,EAAE,kEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE,YAAY,EAAE,OAAO,CAAC;YACzF,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK;YAC5C,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK;YACxD,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI;SAC3D;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,gBAAgB,CAAC,OAAwB;QACvC,MAAM,UAAU,GAAW,OAAO,CAAC,KAAK,CAAC;QACzC,MAAM,WAAW,GAAW,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9E,IAAI,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,KAAK,KAAK,EAAE,EAAE;YACjF,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC;SACnC;IACH,CAAC;;4FA1MU,sBAAsB;sGAAtB,sBAAsB;QCdnC,0EACI;QAAA,yEACI;QAAA,yEACI;QAAA,wEAAuB;QAAA,uDAAS;QAAA,4DAAK;QACzC,4DAAM;QACN,oHACI;QA2FJ,kHACI;QAER,4DAAM;QACV,4DAAO;;QArGD,sFAAyB;QAGI,0DAAS;QAAT,0EAAS;QAE/B,0DAAyB;QAAzB,uFAAyB;QA4FE,0DAA0B;QAA1B,wFAA0B;;6FDnFrD,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICkBhC,wEACI;IAAA,wEAAqB;IAAA,uDAAgB;IAAA,4DAAK;IAC1C,yEAAqB;IAAA,uDAAiB;IAAA,4DAAK;IAC3C,wEAAqB;IAAA,uDAAiB;IAAA,4DAAK;IAC3C,yEAAqB;IAAA,uDAA6E;IAAA,4DAAK;IACvG,wEACI;IAAA,8EAA8D;IAA9B,6WAA6B;IAAC,gEAAI;IAAA,4DAAS;IAE/E,4DAAK;IACT,4DAAK;;;IARoB,0DAAgB;IAAhB,gFAAgB;IAChB,0DAAiB;IAAjB,iFAAiB;IACjB,0DAAiB;IAAjB,iFAAiB;IACjB,0DAA6E;IAA7E,gKAA6E;;;IAjBpH,sEACI;IAAA,yEACE;IAAA,2EACI;IAAA,2EACI;IAAA,wEACM;IAAA,wEAAqB;IAAA,+DAAI;IAAA,4DAAK;IAC9B,yEAAqB;IAAA,gEAAK;IAAA,4DAAK;IAC/B,wEAAqB;IAAA,iEAAK;IAAA,4DAAK;IAC/B,0EAAqB;IAAA,gEAAI;IAAA,4DAAK;IAC9B,yEAAsB;IAAA,oEAAO;IAAA,4DAAK;IACxC,4DAAK;IACT,4DAAQ;IACR,yEACI;IAAA,wHACI;IASR,4DAAQ;IAEZ,4DAAQ;IACV,4DAAM;IAEV,4DAAM;;;IAfwB,2DAAgC;IAAhC,oFAAgC;;;IAgB9D,0EACI;IAAA,8FACJ;IAAA,4DAAM;;AD1BH,MAAM,oBAAoB;IAE/B,YAAoB,cAA6B,EAAU,MAAa;QAApD,mBAAc,GAAd,cAAc,CAAe;QAAU,WAAM,GAAN,MAAM,CAAO;IAAI,CAAC;IAE7E,QAAQ;QACP,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,SAAS,CAC3C,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,EACzC,KAAK,GAAE,QAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAC1B;IACF,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;IAC/C,CAAC;IAED,UAAU,CAAC,OAAgB;QACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;IACvD,CAAC;;wFAjBU,oBAAoB;oGAApB,oBAAoB;QCVjC,yEAEI;QAAA,yEACI;QAAA,wEAAuB;QAAA,0EAAe;QAAA,4DAAK;QAC/C,4DAAM;QACN,iHACI;QA4BJ,gHACI;QAER,4DAAM;;QAhCG,0DAAyB;QAAzB,uFAAyB;QA6BE,0DAA0B;QAA1B,wFAA0B;;6FDxBjD,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCP9B,qEAAI;QAAA,gGAAqC;QAAA,4DAAK;;6FDOjC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAA2C;AAEoB;;;AASxD,MAAM,cAAc;IAQzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAN5B,YAAO,GAAG,uBAAuB,CAAC;QAClC,aAAQ,GAAG,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC;QACvC,gBAAW,GAAG,IAAI,CAAC,OAAO,GAAG,cAAc,CAAC;QAC5C,eAAU,GAAG,IAAI,CAAC,OAAO,GAAG,eAAe,CAAC;IAGZ,CAAC;IAEzC,YAAY;QACV,MAAM,WAAW,GAAG;YAClB,OAAO,EAAG,IAAI,gEAAW,CAAC;gBACxB,aAAa,EAAG,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC;aACjE,CAAC;SACH,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAE,CAAC;QAClF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAyB,IAAI,CAAC,QAAQ,EAAC,WAAW,CAAC,CAAC;IAC1E,CAAC;IAED,eAAe;QACb,IAAI,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,MAAM,EAAC;YACnD,OAAO,IAAI,CAAC;SACb;aAAI;YACH,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED,MAAM;QACL,IAAI,WAAW,GAAG;YACf,OAAO,EAAG,IAAI,gEAAW,CAAC;gBACxB,aAAa,EAAG,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC;aACjE,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC;IAC3D,CAAC;IAED,eAAe;QACb,MAAM,WAAW,GAAG;YAClB,OAAO,EAAG,IAAI,gEAAW,CAAC;gBACxB,aAAa,EAAG,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC;aACnE,CAAC;SAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;IAClE,CAAC;IAED,gBAAgB;QACd,MAAM,WAAW,GAAG;YAClB,OAAO,EAAG,IAAI,gEAAW,CAAC;gBACxB,eAAe,EAAG,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC;aACrE,CAAC;SAAC;QACH,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAE,CAAC;QACtF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAA4B,IAAI,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;IACjF,CAAC;IAED,UAAU,CAAC,OAAe;QACxB,MAAM,WAAW,GAAG;YAClB,OAAO,EAAG;gBACR,eAAe,EAAG,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC;aACnE;SACF;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE,WAAW,CAAC;IACvE,CAAC;IAEA,aAAa;QACX,MAAM,WAAW,GAAG;YAClB,OAAO,EAAG;gBACR,aAAa,EAAG,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC;aACjE;SACF;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAA2B,IAAI,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;IAC/E,CAAC;IAED,WAAW,CAAC,EAAU;QAErB,MAAM,WAAW,GAAG;YAClB,OAAO,EAAG;gBACR,aAAa,EAAG,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC;aACjE;SACF;QACA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,IAAI,CAAC,UAAU,IAAI,EAAE,EAAE,EAAE,WAAW,CAAC,CAAC;IACzE,CAAC;IAED,cAAc,CAAC,OAAiB;QAC9B,MAAM,WAAW,GAAG;YAClB,OAAO,EAAG;gBACR,aAAa,EAAG,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC;aACjE;SACF;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;IACvE,CAAC;;4EA1FS,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;ICQpD,2EAC8F;IAAA,+EAC/E;IAAA,4DAAO;;;IACtB,2EAC+F;IAAA,kGAC7D;IAAA,4DAAO;;;IACzC,2EAC+F;IAAA,mGAC5D;IAAA,4DAAO;;;IAK1C,2EACiG;IAAA,+EAClF;IAAA,4DAAO;;;IACtB,2EACkG;IAAA,kGAChE;IAAA,4DAAO;;;IACzC,2EACkG;IAAA,mGAC/D;IAAA,4DAAO;;;IAzBlD,yEACI;IAAA,yEACI;IAAA,2EAAuC;IAAA,mEAAQ;IAAA,4DAAQ;IACvD,uEACA;IAAA,oHAC8F;IAE9F,oHAC+F;IAE/F,oHAC+F;IAEnG,4DAAM;IACN,yEACI;IAAA,4EAA2C;IAAA,oEAAQ;IAAA,4DAAQ;IAC3D,wEACA;IAAA,sHACiG;IAEjG,sHACkG;IAElG,sHACkG;IAEtG,4DAAM;IACV,4DAAM;;;IAtBM,0DAAyF;IAAzF,4NAAyF;IAGzF,0DAA0F;IAA1F,6NAA0F;IAG1F,0DAA0F;IAA1F,6NAA0F;IAO1F,0DAA4F;IAA5F,kOAA4F;IAG5F,0DAA6F;IAA7F,mOAA6F;IAG7F,0DAA6F;IAA7F,mOAA6F;;;IAKzG,yEACI;IAAA,qEAAI;IAAA,iFAAsB;IAAA,4DAAK;IACnC,4DAAM;;;;IACN,0EACI;IAAA,6EACsB;IAAlB,gTAAiB;IAAC,gEAAK;IAAA,4DAAS;IACxC,4DAAM;;;IAF4C,0DAA+B;IAA/B,+FAA+B;;AD7BlF,MAAM,eAAe;IAK1B,YAAoB,WAAuB,EAAU,cAA6B;QAA9D,gBAAW,GAAX,WAAW,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAe;QAFlF,cAAS,GAAa,KAAK,CAAC;QAC5B,iBAAY,GAAa,KAAK,CAAC;IACuD,CAAC;IAEvF,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,QAAQ,EAAG,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACzF,QAAQ,EAAG,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SAC1F,CAAC,CAAC;IACH,CAAC;IAEH,KAAK;QACJ,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAI,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,GAAE,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC;QAC7G,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;QACrD,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CAC3C,QAAQ,CAAC,EAAE;YACT,IAAG,QAAQ,CAAC,MAAM,KAAK,IAAI,EAAC;gBAC1B,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAChD,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;gBAC9C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;iBAAI;gBACH,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;gBACnD,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;gBAC/C,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC;aACxB;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACL,IAAG,KAAK,CAAC,MAAM,KAAK,GAAG;gBAAE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;;gBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;QAEhD,CAAC,CACD;IACF,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;IAC/C,CAAC;;8EA1CU,eAAe;+FAAf,eAAe;QCT5B,0EACI;QAAA,yEACI;QAAA,yEACI;QAAA,wEAAuB;QAAA,oFAAyB;QAAA,4DAAK;QACzD,4DAAM;QACN,4GACI;QA4BJ,2GACI;QAEJ,2GACI;QAGJ,yEACI;QAAA,sGACJ;QAAA,4DAAM;QACN,0EACI;QAAA,yFACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAO;;QAhDD,qFAAwB;QAKC,0DAA0B;QAA1B,wFAA0B;QA6B1B,0DAAyB;QAAzB,uFAAyB;QAGvB,0DAA0B;QAA1B,wFAA0B;QAInB,0DAAqB;QAArB,kFAAqB;QAGrB,0DAAwB;QAAxB,qFAAwB;;6FDnCnD,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,oEAAG;QAAA,wEAAa;QAAA,4DAAI;;6FDOP,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListBookingComponent } from './booking/list-booking.component';\nimport { CreateBookingComponent } from './booking/create-booking.component';\nimport { SignupComponent } from './signup.component';\nimport { SigninComponent } from './signin.component';\nimport { NotfoundComponent } from './notfound.component';\n\nconst routes: Routes = [\n  {path:\"list\", component:ListBookingComponent},\n  {path:\"edit/:id\", component:CreateBookingComponent},\n  {path:\"create\", component:CreateBookingComponent},\n  {path:\"signup\", component:SignupComponent},\n  {path:\"signin\", component:SigninComponent},\n  {path:\"\", redirectTo:\"/signin\", pathMatch:\"full\"},\n  {path:\"**\", component:NotfoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { BookingService } from './services/booking.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private bookingService:BookingService){}\n  title = 'BookingClient';\n  errorFlag:boolean = false;\n  isAuthenticated():Boolean{\n    return this.bookingService.isAuthenticated();\n  }\n  logout(){\n    this.bookingService.logout().subscribe(\n      response=>{\n        if (response){\n          localStorage.removeItem(\"authenticated\");\n          localStorage.removeItem(\"authCode\");\n        }else{\n          console.log(\"There was service error\");\n          this.errorFlag = true;\n        }\n      },\n      error=>{\n        console.log(\"There was service error\", error);\n        this.errorFlag = true;\n      }\n    )\n  }\n}\n","<div class=\"container\">\n  <nav class=\"nav\">\n    <li class=\"nav-item\" [hidden]=\"isAuthenticated()\">\n      <a class=\"nav-link\" routerLink=\"/signup\">SignUp</a>\n    </li>\n    <li class=\"nav-item\" [hidden]=\"isAuthenticated()\">\n      <a class=\"nav-link\" routerLink=\"/signin\">SignIn</a>\n    </li>\n    <li class=\"nav-item\" [hidden]=\"!isAuthenticated()\">\n      <a class=\"nav-link\" routerLink=\"/signin\">Home</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"/list\">List</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"/create\">Create</a>\n    </li>\n    <li class=\"nav-item\" [hidden]=\"!isAuthenticated()\">\n      <a class=\"nav-link\" routerLink=\"/signin\" (click)=\"logout()\">Logout</a>\n    </li>\n  </nav>\n  <router-outlet></router-outlet>\n  <div class=\"alert alert-danger\" *ngIf = \"errorFlag\"> \n    There was an error please try back later\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CreateBookingComponent } from './booking/create-booking.component';\nimport { ListBookingComponent } from './booking/list-booking.component';\nimport { SignupComponent } from './signup.component';\nimport { SigninComponent } from './signin.component';\nimport { NotfoundComponent } from './notfound.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateBookingComponent,\n    ListBookingComponent,\n    SignupComponent,\n    SigninComponent,\n    NotfoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BookingService } from '../services/booking.service';\nimport { FormGroup, Validators, FormBuilder, FormArray, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { TimeSlot } from '../models/TimeSlot';\nimport { Booking } from '../models/Booking';\nimport { formatDate } from '@angular/common';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-create-booking',\n  templateUrl: './create-booking.component.html',\n  styleUrls: ['./create-booking.component.css']\n})\nexport class CreateBookingComponent implements OnInit {\n  bookingForm: FormGroup;\n  timeslots: TimeSlot[];\n  errorFlag: boolean = false;\n  currentDate: string;\n  currentDateValue: string;\n  title: String;\n  updateFlag: boolean = false;\n  booking: Booking;\n  constructor(private bookingService: BookingService, private formBuilder: FormBuilder, private router: Router, private activatedRouter: ActivatedRoute) {\n\n    this.currentDate = formatDate(new Date, \"yyyy-MM-dd\", \"en-US\");\n    //this.currentDateValue = \"\";\n    this.title = \"Create Booking\";\n\n  }\n\n  ngOnInit(): void {\n\n    this.bookingForm = this.formBuilder.group({\n      name: [\"\", Validators.required],\n      email: [\"\", [this.checkEmailDomain]],\n      passwordGroup: this.formBuilder.group({\n        password: [\"\", Validators.required],\n        confirmPassword: [\"\", Validators.required]\n      }, { validator: this.matchPasswords }),\n      alternativeEmails: this.formBuilder.array([]),\n      subscription: [\"\"],\n      timeslot: [\"\", [Validators.required]],\n      dateOfBirth: [\"\"],\n      gender: [\"\"],\n      phone: [\"\", Validators.pattern(\"[0-9]{3}\\-[0-9]{3}\\-[0-9]{4}\")]\n    })\n\n    this.bookingForm.get(\"subscription\").valueChanges.subscribe(\n      checkedValue => {\n        let email = this.bookingForm.get(\"email\");\n        if (checkedValue) {\n          email.setValidators([Validators.required, this.checkEmailDomain]);\n          email.updateValueAndValidity();\n        } else {\n          email.clearValidators();\n          email.updateValueAndValidity();\n          email.setValidators(this.checkEmailDomain);\n          email.updateValueAndValidity();\n        }\n\n      }\n    );\n    this.bookingService.getAllTimeslots2().subscribe(\n      response => this.timeslots = response.list,\n      error => console.log(error)\n    )\n\n    this.activatedRouter.paramMap.subscribe(\n      param => {\n        let id = param.get(\"id\")\n        if (id) {\n          this.bookingService.getABooking(id).subscribe(\n            response => {\n              console.log(\"booking response\", response)\n              this.mapToTemplate(response);\n              this.title = \"Edit Booking\"\n              this.updateFlag = true;\n            },\n            error => console.log(error)\n          )\n        } else {\n          this.title = \"Create Booking\";\n          this.updateFlag = false;\n        }\n      }\n    )\n  }\n\n  get phone() {\n    return this.bookingForm.controls.phone;\n  }\n\n  get timeslot() {\n    return this.bookingForm.controls.timeslot;\n  }\n\n  mapToTemplate(booking: Booking) {\n\n    this.booking = booking;\n\n    let dateValue: String = booking.dateOfBirth;\n    let dateYear: string = dateValue.substring(dateValue.lastIndexOf(\"-\") + 1);\n    let dateBeforeYear: string = dateValue.substring(0, dateValue.lastIndexOf(\"-\"))\n    this.currentDateValue = dateYear + \"-\" + dateBeforeYear;\n    console.log(\"date of Birth\", this.currentDateValue);\n\n    this.timeslots.push(booking.slot);\n\n\n    this.bookingForm.patchValue({\n      name: booking.name,\n      email: booking.email,\n      phone: booking.phone,\n      gender: booking.gender,\n      bookingDate: booking.bookingDate,\n      address: booking.address,\n      dateOfBirth: formatDate(this.currentDateValue, \"yyyy-MM-dd\", \"en-US\"),\n      subscription: booking.subscription,\n      bookingId: booking.bookingId,\n      timeslot: booking.slot,\n      passwordGroup: {\n        password: \"qwe\",\n        confirmPassword: \"qwe\"\n      }\n    });\n\n    console.log(\"booking form after edit\", this.bookingForm)\n    // this.bookingForm.patchValue({\n    //   dateOfBirth : this.currentDateValue\n    // })\n  }\n\n  get passwordControl() {\n    return this.bookingForm.get('passwordGroup').get('password')\n  }\n  get confirmPasswordControl() {\n    return this.bookingForm.get(\"passwordGroup\").get(\"confirmPassword\");\n  }\n  get alternativeEmails() {\n    return this.bookingForm.get(\"alternativeEmails\") as FormArray\n  }\n\n  addAlternativeEmail() {\n    return this.alternativeEmails.push(this.formBuilder.control(\n      \"\", [this.checkEmailDomain]\n    ))\n  }\n  getEmails() {\n    return (this.bookingForm.get(\"emails\") as FormArray).controls\n  }\n\n  save() {\n    console.log(\"bookingForm\", this.bookingForm)\n    let path: Observable<Booking>;\n    if (this.updateFlag) {\n      path = this.bookingService.updateABooking(this.mapToModel());\n    } else {\n      path = this.bookingService.addBooking(this.mapToModel());\n    }\n\n\n    path.subscribe(\n      response => {\n        console.log(response),\n          this.router.navigateByUrl(\"/list\");\n      },\n      error => {\n        console.log(error);\n        this.errorFlag = true;\n\n      }\n    )\n\n  }\n\n\n\n  isAuthenticated(): Boolean {\n    return this.bookingService.isAuthenticated();\n  }\n\n  matchPasswords(group: AbstractControl): ValidationErrors | null {\n    const password = group.get(\"password\");\n    const confirmPassword = group.get(\"confirmPassword\");\n    if (password.value === confirmPassword.value || (confirmPassword.pristine || confirmPassword.value === \"\")) {\n      return null;\n    } else {\n      return { \"passwordMismatch\": true };\n    }\n  }\n\n  mapToModel() {\n    let booking: Booking;\n    booking = {\n      name: this.bookingForm.get(\"name\").value,\n      email: this.bookingForm.get(\"email\").value,\n      phone: \"123-123-1234\",\n      slot: this.bookingForm.get(\"timeslot\").value,\n      bookingDate: formatDate(new Date, \"MM-dd-yyyy\", \"en-US\"),\n      dateOfBirth: formatDate(this.bookingForm.get(\"dateOfBirth\").value, \"MM-dd-yyyy\", \"en-US\"),\n      gender: this.bookingForm.get(\"gender\").value,\n      subscription: this.bookingForm.get(\"subscription\").value,\n      bookingId: this.updateFlag ? this.booking.bookingId : null\n    }\n    return booking;\n  }\n\n  checkEmailDomain(control: AbstractControl): ValidationErrors | null {\n    const emailvalue: string = control.value;\n    const emailDomain: string = emailvalue.substring(emailvalue.indexOf(\"@\") + 1);\n    if (emailDomain.includes(\"gmail.com\") || control.pristine || control.value === \"\") {\n      return null;\n    } else {\n      return { \"domainNotValid\": true };\n    }\n  }\n\n\n}\n\n\n","<form [formGroup]=\"bookingForm\" novalidate>\n    <div class=\"card\">\n        <div class=\"card-header bg-primary\">\n            <h5 class=\"card-title\">{{title}}</h5>\n        </div>\n        <div *ngIf=\"isAuthenticated()\">\n            <div class=\"card-body\">\n                <div class=\"form-group row\">\n                    <label for=\"name\" class=\"col-md-3\">Name</label>\n                    <input id=\"name\" class=\"form-control col-md-4\" type=\"text\" formControlName=\"name\">\n                    <small class=\"text-danger\"\n                    *ngIf=\"bookingForm.controls.name.errors?.required && bookingForm.controls.name.touched\">Name is required</small>\n                </div>\n                    <div class=\"form-group row\">\n                        <label for=\"email\" class=\"col-md-3\">Email</label>\n                        <input id=\"email\" class=\"form-control col-md-4\" type=\"text\" email\n                            formControlName=\"email\">\n                        <small class=\"text-danger\"\n                            *ngIf=\"bookingForm.get('email').errors?.required && bookingForm.get('email').touched\">Email is required</small>\n                        <small class=\"text-danger\"\n                            *ngIf=\"bookingForm.get('email').errors?.domainNotValid && bookingForm.get('email').touched\">The email domain is not gmail</small>\n                    </div>\n                    <div class=\"form-group\">\n                        <button class=\"btn btn-primary\" type=\"button\" (click)=\"addAlternativeEmail()\">Add Email</button>\n                        <div formArrayName=\"alternativeEmails\" *ngFor=\"let email of alternativeEmails.controls; let i = index\">\n                        <input class=\"form-control col-md-4 offset-md-3 mt-3\" type=\"text\" email\n                            [formControlName]=\"i\">\n                        <small class=\"text-danger col-md-3 offset-md-7\"\n                            *ngIf=\"email.errors?.domainNotValid && email.touched\">The email domain is not gmail</small> \n                        </div>\n                    </div>\n                    <div class=\"form-gourp col-md-3\">\n                        <div class=\"form-check form-check-inline row\">\n                            <input id=\"subscription\" class=\"form-check-input mr-3 mb-3\" type=\"checkbox\" formControlName=\"subscription\">\n                            <label for=\"subscription\" class=\"form-check-label mb-3\">send promotional offers</label>\n                        </div>\n                    </div>\n                <div formGroupName=\"passwordGroup\">\n                    <div class=\"form-group\">\n                        <label for=\"originalPass\">Password</label>\n                        <input id=\"originalPass\" class=\"form-control\" type=\"text\" formControlName=\"password\">\n                        <small class=\"text-danger\"\n                            *ngIf=\"passwordControl.errors?.required && passwordControl.touched\">Password\n                            is required</small>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"confirmPass\">Confirm Password</label>\n                        <input id=\"confirmPass\" class=\"form-control\" type=\"text\" formControlName=\"confirmPassword\">\n                        <small class=\"text-danger\"\n                            *ngIf=\"confirmPasswordControl.errors?.required && confirmPasswordControl.touched\">confirmPassword is required</small>\n                        <small class=\"text-danger\"\n                            *ngIf=\"bookingForm.controls.passwordGroup.errors?.passwordMismatch\">password and confirmPassword dont match</small>\n                    </div>\n                </div>\n\n                <div class=\"form-group row\">\n                    <label for=\"phone\" class=\"col-md-3\">Phone</label>\n                    <input id=\"phone\" class=\"form-control col-md-4\" type=\"tel\" formControlName=\"phone\">\n                    <small class=\"text-danger\" *ngIf=\"phone.errors?.pattern && phone.touched\">The phone is not in correct format XXX-XXX-XXXX</small>\n                </div>\n\n                <div class=\"form-group row\">\n                    <label for=\"datOfBirth\" class=\"col-md-3\">Date of Birth</label>\n                    <input id=\"datOfBirth\" class=\"form-control col-md-4\" type=\"date\" formControlName=\"dateOfBirth\" max=\"{{currentDate}}\">\n                </div>\n\n                <div class=\"form-group row\">\n                    <label class=\"col-md-3\">Gender</label>\n                    <div class=\"col-md-7 row\">\n                        <div class=\"form-radio form-radio-inline mr-4 ml-3\">\n                            <input id=\"male\" class=\"form-check-input\" type=\"radio\" name=\"gender\" formControlName=\"gender\" value=\"Male\">\n                            <label for=\"male\" class=\"form-check-label\">Male</label>\n                        </div>\n                        <div class=\"form-radio form-radio-inline\">\n                            <input id=\"female\" class=\"form-check-input\" type=\"radio\" name=\"gender\"\n                            formControlName=\"gender\" value=\"Female\">\n                            <label for=\"female\" class=\"form-check-label\">Female</label>\n                        </div>\n                    </div>\n                </div>\n             \n                <div class=\"form-group\">\n                    <label for=\"timeslot\">Available Timeslot</label>\n                    <select id=\"timeslot\" class=\"form-control col-md 6\" formControlName=\"timeslot\">\n                        <option value=\"\">Please select a timeslot</option>\n                        <option *ngFor=\"let timeslot of timeslots\" [ngValue]=\"timeslot\">{{timeslot.date}}-{{timeslot.startTime}}:{{timeslot.endTime}}</option>\n                    </select>\n                    <small class=\"text-danger\" *ngIf=\"timeslot.errors?.required && timeslot.touched\">Please select a timeslot</small>\n                </div>\n            </div>\n\n\n            <div class=\"card-footer\">\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"save()\" [disabled]=\"bookingForm.invalid\">Save</button>\n                <div class=\"alert alert-danger\" *ngIf=\"errorFlag\">There was an issue please try back later</div>\n            </div>\n        </div>\n        <div class=\"alert alert-danger\" *ngIf=\"!isAuthenticated()\">\n            Please log in to access this page\n        </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { BookingService } from '../services/booking.service';\nimport { Booking } from '../models/Booking';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-list-booking',\n  templateUrl: './list-booking.component.html',\n  styleUrls: ['./list-booking.component.css']\n})\nexport class ListBookingComponent implements OnInit {\n  bookings:Booking[];\n  constructor(private bookingService:BookingService, private router:Router) { }\n\n  ngOnInit(): void {\n   this.bookingService.getAllBooking().subscribe(\n     response => this.bookings = response.list,\n     error=>console.log(error)\n   )\n  }\n\n  isAuthenticated():Boolean{\n    return this.bookingService.isAuthenticated();\n  }\n\n  editRecord(booking: Booking){\n      this.router.navigate([\"/edit\", booking.bookingId]);\n  }\n\n}\n","<div class=\"card\">\n\n    <div class=\"card-header bg-primary\">\n        <h5 class=\"card-title\">List of Booking</h5>\n    </div>\n    <div *ngIf=\"isAuthenticated()\">\n        <div class=\"card-body\">\n          <table class=\"table table-light\">\n              <thead class=\"thead-light\">\n                  <tr class=\"row\"> \n                        <th class=\"col-md-2\">Name</th>\n                        <th class=\"col-md-3\">Email</th>\n                        <th class=\"col-md-2\">Phone</th>\n                        <th class=\"col-md-3\">Slot</th>\n                        <th class=\"col-md-2\"> Options</th>\n                  </tr>\n              </thead>\n              <tbody>\n                  <tr class=\"row\" *ngFor=\"let booking of bookings\">\n                      <td class=\"col-md-2\">{{booking.name}}</td>\n                      <td class=\"col-md-3\">{{booking.email}}</td>\n                      <td class=\"col-md-2\">{{booking.phone}}</td>\n                      <td class=\"col-md-3\">{{booking.slot.date}} : {{booking.slot.startTime}} - {{booking.slot.endTime}}</td>\n                      <td class=\"col-md-2\">\n                          <button class=\"btn btn-primary\" (click)=\"editRecord(booking)\">Edit</button>\n\n                      </td>\n                  </tr>\n              </tbody>\n            \n          </table>\n        </div>\n       \n    </div>\n    <div class=\"alert alert-danger\" *ngIf=\"!isAuthenticated()\">\n        Please log in to access this page\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>The requested Page could not be found</h1>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticationResponse } from '../models/AuthenticationResponse';\nimport { TimeSlot } from '../models/TimeSlot';\nimport { BookingResponse } from '../models/BookingResponse';\nimport { Booking } from '../models/Booking';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookingService {\n\n  private baseUrl = \"http://localhost:8080\";\n  private loginUrl = this.baseUrl + \"/api/login\";\n  private timeslotUrl = this.baseUrl + \"/api/slots/2\";\n  private bookingUrl = this.baseUrl + \"/api/bookings\";\n  \n  \n  constructor(private http: HttpClient) { }\n\n  authenticate():Observable<AuthenticationResponse> {\n    const httpOptions = {\n      headers : new HttpHeaders({\n        Authorization : \"Basic \" + localStorage.getItem(\"basicAuthCode\")\n      })\n    };\n    console.log(\"basic code in authenticate\", localStorage.getItem(\"basicAuthCode\") );\n    return this.http.get<AuthenticationResponse>(this.loginUrl,httpOptions);\n  }\n\n  isAuthenticated():Boolean{\n    if (localStorage.getItem(\"authenticated\") === \"true\"){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  logout():Observable<Boolean>{\n   let httpOptions = {\n      headers : new HttpHeaders({\n        Authorization : \"Basic \" + localStorage.getItem(\"basicAuthCode\")\n      })\n    };\n    return this.http.get<Boolean>(this.loginUrl, httpOptions)\n  }\n\n  getAllTimeslots():Observable<TimeSlot[]>{\n    const httpOptions = {\n      headers : new HttpHeaders({\n        Authorization : \"Basic \" + localStorage.getItem(\"basicAuthCode\")\n    })}\n    return this.http.get<TimeSlot[]>(this.timeslotUrl, httpOptions);\n  }\n\n  getAllTimeslots2():Observable<BookingResponse<TimeSlot>>{\n    const httpOptions = {\n      headers : new HttpHeaders({\n        \"Authorization\" : \"Basic \" + localStorage.getItem(\"basicAuthCode\")\n    })}\n    console.log(\"basic code in getAllTimeslots2\", localStorage.getItem(\"basicAuthCode\") );\n    return this.http.get<BookingResponse<TimeSlot>>(this.timeslotUrl, httpOptions);\n  }\n\n  addBooking(booking:Booking):Observable<Booking>{\n    const httpOptions = {\n      headers : {\n        \"Authorization\" : \"Basic \" + localStorage.getItem(\"basicAuthCode\")\n      }\n    }\n    return this.http.post<Booking>(this.bookingUrl, booking, httpOptions)\n  }\n  \n   getAllBooking():Observable<BookingResponse<Booking>>{\n     const httpOptions = {\n       headers : {\n         Authorization : \"Basic \" + localStorage.getItem(\"basicAuthCode\")\n       }\n     }\n     return this.http.get<BookingResponse<Booking>>(this.bookingUrl, httpOptions);\n   }\n\n   getABooking(id: string):Observable<Booking>{\n\n    const httpOptions = {\n      headers : {\n        Authorization : 'Basic ' + localStorage.getItem(\"basicAuthCode\")\n      }\n    }\n     return this.http.get<Booking>(`${this.bookingUrl}/${id}`, httpOptions);\n   }\n\n   updateABooking(booking : Booking):Observable<Booking>{\n     const httpOptions = {\n       headers : {\n         Authorization : 'Basic ' + localStorage.getItem(\"basicAuthCode\")\n       }\n     }\n\n     return this.http.put<Booking>(this.bookingUrl, booking, httpOptions);\n   }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { BookingService } from './services/booking.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  signinForm : FormGroup;\n  errorFlag : boolean = false;\n  couldNotAuth : boolean = false;\n  constructor(private formBuilder:FormBuilder, private bookingService:BookingService) { }\n\n  ngOnInit(): void {\n    this.signinForm = this.formBuilder.group({\n      username : [\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(10)]],\n      password : [\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(10)]]\n    });\n    }\n  \n  login(){\n   console.log(\"form contents\", this.signinForm);\n   let basicAuthCode = btoa(this.signinForm.get(\"username\").value+ \":\" + this.signinForm.get(\"password\").value);\n   localStorage.setItem(\"basicAuthCode\", basicAuthCode);\n   this.bookingService.authenticate().subscribe(\n    response => {\n      if(response.status === true){\n        localStorage.setItem(\"authCode\", response.code);\n        localStorage.setItem(\"authenticated\", \"true\");\n        this.couldNotAuth = false;\n        this.errorFlag = false;\n      }else{\n        console.log(\"the user could not be authenticated\");\n        localStorage.setItem(\"authenticated\", \"false\");\n        this.couldNotAuth=true;\n      }\n    },\n    error => {\n       if(error.status === 401) this.couldNotAuth = true;\n       else this.errorFlag = true;\n       console.log(\"error from the service\", error);\n\n    }\n   )\n  } \n\n  isAuthenticated():Boolean{\n    return this.bookingService.isAuthenticated();\n  }\n  \n}\n","<form [formGroup]=\"signinForm\" novalidate>\n    <div class=\"card\">\n        <div class=\"card-header bg-primary\">\n            <h5 class=\"card-title\">Booking Application Login</h5>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!isAuthenticated()\">\n            <div class=\"form-group row\">\n                <label for=\"formUser\" class=\"col-md-3\">Username</label>\n                <input id=\"formUser\" class=\"form-control col-md-3\" type=\"text\" formControlName=\"username\" />\n                <span class=\"text-danger\"\n                    *ngIf=\"signinForm.get('username').errors?.required && signinForm.get('username').touched\">Username\n                    is required</span>\n                <span class=\"text-danger\"\n                    *ngIf=\"signinForm.get('username').errors?.minlength && signinForm.get('username').touched\">Username\n                    should be atleast 3 characters</span>\n                <span class=\"text-danger\"\n                    *ngIf=\"signinForm.get('username').errors?.maxlength && signinForm.get('username').touched\">Username\n                    should not exceed 10 characters</span>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"formPassword\" class=\"col-md-3\">Password</label>\n                <input id=\"formPassword\" class=\"form-control col-md-3\" type=\"password\" formControlName=\"password\" />\n                <span class=\"text-danger\"\n                    *ngIf=\"signinForm.controls.password.errors?.required &&signinForm.controls.password.touched\">Password\n                    is required</span>\n                <span class=\"text-danger\"\n                    *ngIf=\"signinForm.controls.password.errors?.minlength &&signinForm.controls.password.touched\">Password\n                    should be atleast 3 characters</span>\n                <span class=\"text-danger\"\n                    *ngIf=\"signinForm.controls.password.errors?.maxlength &&signinForm.controls.password.touched\">Password\n                    should be atleast 10 characters</span>\n            </div>\n        </div>\n\n        <div class=\"card-body\" *ngIf=\"isAuthenticated()\">\n            <h4>Welcome to BookingSite</h4>\n        </div>\n        <div class=\"card-footer\" *ngIf=\"!isAuthenticated()\">\n            <button class=\"btn btn-primary\" type=\"button\" [disabled]=\"signinForm.invalid\"\n                (click)=\"login()\">Login</button>\n        </div>\n        <div class=\"alert alert-danger\" [hidden]=\"!errorFlag\">\n            There was an issue Please try back later.\n        </div>\n        <div class=\"alert alert-danger\" [hidden]=\"!couldNotAuth\">\n            Credentials are not correct\n        </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>signup works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}